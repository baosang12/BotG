name: Notify on Gate24h failure
on:
  workflow_run:
    workflows: ["Gate 24h (paper supervised)"]
    types: [completed]
jobs:
  notify:
    if: ${{ github.event.workflow_run.conclusion != 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Telegram notify (if secrets)
        id: tgram
        if: ${{ secrets.TELEGRAM_BOT_TOKEN && secrets.TELEGRAM_CHAT_ID }}
        uses: appleboy/telegram-action@4fde07eaa6fb2ab49ca1af1c65b9b9b5fd5ad1ce
        timeout-minutes: 2
        continue-on-error: true
        with:
          to:    ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            âŒ Gate24h failed
            Repo: ${{ github.repository }}
            RunID: ${{ github.event.workflow_run.id }}
            Conclusion: ${{ github.event.workflow_run.conclusion }}
            URL: ${{ github.event.workflow_run.html_url }}

      - name: Issue alert (fallback)
        if: steps.tgram.outcome != 'success'
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b
        with:
          script: |
            const tit = 'Gate24h alerts (auto)';
            const body = `âŒ Gate24h failed
            Conclusion: ${{ github.event.workflow_run.conclusion }}
            URL: ${{ github.event.workflow_run.html_url }}`;
            const {data: issues} = await github.rest.issues.listForRepo({owner: context.repo.owner, repo: context.repo.repo, state: 'open', per_page: 100});
            let issue = issues.find(i => i.title === tit);
            if (!issue) {
              issue = (await github.rest.issues.create({owner: context.repo.owner, repo: context.repo.repo, title: tit, labels: ['gate-alert']})).data;
            }
            await github.rest.issues.createComment({owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number, body});
